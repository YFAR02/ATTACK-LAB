A brief walkthrough of the buffer overflow attack known as Attack Lab or Buffer Bomb in Computer Systems course.

There are 5 phases of the lab and your mission is to come up with a exploit strings that will enable you take control of the executable file and do as you wish.

Dump of assembler code for function main:
   0x000000000040112f <+0>:     push   %r14
   0x0000000000401131 <+2>:     push   %r13
   0x0000000000401133 <+4>:     push   %r12
   0x0000000000401135 <+6>:     push   %rbp
   0x0000000000401136 <+7>:     push   %rbx
   0x0000000000401137 <+8>:     mov    %edi,%ebp
   0x0000000000401139 <+10>:    mov    %rsi,%rbx
   0x000000000040113c <+13>:    mov    $0x401db4,%esi
   0x0000000000401141 <+18>:    mov    $0xb,%edi
   0x0000000000401146 <+23>:    callq  0x400d50 <signal@plt>
   0x000000000040114b <+28>:    mov    $0x401d66,%esi
   0x0000000000401150 <+33>:    mov    $0x7,%edi
   0x0000000000401155 <+38>:    callq  0x400d50 <signal@plt>
   0x000000000040115a <+43>:    mov    $0x401e02,%esi
   0x000000000040115f <+48>:    mov    $0x4,%edi
   0x0000000000401164 <+53>:    callq  0x400d50 <signal@plt>
   0x0000000000401169 <+58>:    cmpl   $0x0,0x203398(%rip)        # 0x604508 <is_checker>
   0x0000000000401170 <+65>:    jne    0x401197 <main+104>
   0x0000000000401172 <+67>:    mov    $0x402f0d,%r12d
   0x0000000000401178 <+73>:    mov    0x203321(%rip),%rax        # 0x6044a0 <stdin@@GLIBC_2.2.5>
   0x000000000040117f <+80>:    mov    %rax,0x20336a(%rip)        # 0x6044f0 <infile>
   0x0000000000401186 <+87>:    mov    $0x0,%r13d
   0x000000000040118c <+93>:    mov    $0x0,%r14d
   0x0000000000401192 <+99>:    jmpq   0x401218 <main+233>
   0x0000000000401197 <+104>:   mov    $0x401e50,%esi
   0x000000000040119c <+109>:   mov    $0xe,%edi
   0x00000000004011a1 <+114>:   callq  0x400d50 <signal@plt>
   0x00000000004011a6 <+119>:   mov    $0x5,%edi
   0x00000000004011ab <+124>:   callq  0x400d20 <alarm@plt>
   0x00000000004011b0 <+129>:   mov    $0x402f12,%r12d
   0x00000000004011b6 <+135>:   jmp    0x401178 <main+73>
   0x00000000004011b8 <+137>:   mov    (%rbx),%rdi
   0x00000000004011bb <+140>:   callq  0x400f66 <usage>
--Type <RET> for more, q to quit, c to continue without paging--
   0x00000000004011c0 <+145>:   mov    $0x4031c5,%esi
   0x00000000004011c5 <+150>:   mov    0x2032dc(%rip),%rdi        # 0x6044a8 <optarg@@GLIBC_2.2.5>
   0x00000000004011cc <+157>:   callq  0x400df0 <fopen@plt>
   0x00000000004011d1 <+162>:   mov    %rax,0x203318(%rip)        # 0x6044f0 <infile>
   0x00000000004011d8 <+169>:   test   %rax,%rax
   0x00000000004011db <+172>:   jne    0x401218 <main+233>
   0x00000000004011dd <+174>:   mov    0x2032c4(%rip),%rdx        # 0x6044a8 <optarg@@GLIBC_2.2.5>
   0x00000000004011e4 <+181>:   mov    $0x402f1a,%esi
   0x00000000004011e9 <+186>:   mov    0x2032d0(%rip),%rdi        # 0x6044c0 <stderr@@GLIBC_2.2.5>
   0x00000000004011f0 <+193>:   callq  0x400d70 <fprintf@plt>
   0x00000000004011f5 <+198>:   mov    $0x1,%eax
   0x00000000004011fa <+203>:   jmpq   0x4012c0 <main+401>
   0x00000000004011ff <+208>:   mov    $0x10,%edx
   0x0000000000401204 <+213>:   mov    $0x0,%esi
   0x0000000000401209 <+218>:   mov    0x203298(%rip),%rdi        # 0x6044a8 <optarg@@GLIBC_2.2.5>
   0x0000000000401210 <+225>:   callq  0x400e10 <strtoul@plt>
   0x0000000000401215 <+230>:   mov    %eax,%r14d
   0x0000000000401218 <+233>:   mov    %r12,%rdx
   0x000000000040121b <+236>:   mov    %rbx,%rsi
   0x000000000040121e <+239>:   mov    %ebp,%edi
   0x0000000000401220 <+241>:   callq  0x400e00 <getopt@plt>
   0x0000000000401225 <+246>:   cmp    $0xff,%al
   0x0000000000401227 <+248>:   je     0x40127b <main+332>
   0x0000000000401229 <+250>:   movsbl %al,%esi
   0x000000000040122c <+253>:   sub    $0x61,%eax
   0x000000000040122f <+256>:   cmp    $0x10,%al
   0x0000000000401231 <+258>:   ja     0x401264 <main+309>
   0x0000000000401233 <+260>:   movzbl %al,%eax
   0x0000000000401236 <+263>:   jmpq   *0x402f58(,%rax,8)
   0x000000000040123d <+270>:   mov    $0xa,%edx
   0x0000000000401242 <+275>:   mov    $0x0,%esi
   0x0000000000401247 <+280>:   mov    0x20325a(%rip),%rdi        # 0x6044a8 <optarg@@GLIBC_2.2.5>
   0x000000000040124e <+287>:   callq  0x400d80 <strtol@plt>
   0x0000000000401253 <+292>:   mov    %eax,%r13d
--Type <RET> for more, q to quit, c to continue without paging--
   0x0000000000401256 <+295>:   jmp    0x401218 <main+233>
   0x0000000000401258 <+297>:   movl   $0x0,0x203226(%rip)        # 0x604488 <notify>
   0x0000000000401262 <+307>:   jmp    0x401218 <main+233>
   0x0000000000401264 <+309>:   mov    $0x402f37,%edi
   0x0000000000401269 <+314>:   mov    $0x0,%eax
   0x000000000040126e <+319>:   callq  0x400d00 <printf@plt>
   0x0000000000401273 <+324>:   mov    (%rbx),%rdi
   0x0000000000401276 <+327>:   callq  0x400f66 <usage>
   0x000000000040127b <+332>:   mov    $0x0,%esi
   0x0000000000401280 <+337>:   mov    %r13d,%edi
   0x0000000000401283 <+340>:   callq  0x400fe6 <initialize_target>
   0x0000000000401288 <+345>:   cmpl   $0x0,0x203279(%rip)        # 0x604508 <is_checker>
   0x000000000040128f <+352>:   je     0x40129a <main+363>
   0x0000000000401291 <+354>:   cmp    %r14d,0x203268(%rip)        # 0x604500 <authkey>
   0x0000000000401298 <+361>:   jne    0x4012c9 <main+410>
   0x000000000040129a <+363>:   mov    0x203264(%rip),%esi        # 0x604504 <cookie>
   0x00000000004012a0 <+369>:   mov    $0x402f4a,%edi
   0x00000000004012a5 <+374>:   mov    $0x0,%eax
   0x00000000004012aa <+379>:   callq  0x400d00 <printf@plt>
   0x00000000004012af <+384>:   mov    0x2031ca(%rip),%rdi        # 0x604480 <buf_offset>
   0x00000000004012b6 <+391>:   callq  0x401f21 <stable_launch>
   0x00000000004012bb <+396>:   mov    $0x0,%eax
   0x00000000004012c0 <+401>:   pop    %rbx
   0x00000000004012c1 <+402>:   pop    %rbp
   0x00000000004012c2 <+403>:   pop    %r12
   0x00000000004012c4 <+405>:   pop    %r13
   0x00000000004012c6 <+407>:   pop    %r14
   0x00000000004012c8 <+409>:   retq
   0x00000000004012c9 <+410>:   mov    %r14d,%esi
   0x00000000004012cc <+413>:   mov    $0x402e70,%edi
   0x00000000004012d1 <+418>:   mov    $0x0,%eax
   0x00000000004012d6 <+423>:   callq  0x400d00 <printf@plt>
   0x00000000004012db <+428>:   mov    $0x0,%eax
   0x00000000004012e0 <+433>:   callq  0x401a6a <check_fail>
--Type <RET> for more, q to quit, c to continue without paging--
   0x00000000004012e5 <+438>:   jmp    0x40129a <main+363>
End of assembler dump.
(gdb)
